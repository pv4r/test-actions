categories: # You can categorize pull requests in release notes using labels.
  - title: '🚀 Features'
    labels: 
      - 'feature'
      - 'enhancement'
  - title: '🐛 Bug Fixes'
    labels:
      - 'fix'
      - 'bugfix'
      - 'bug'
  - title: '🔧 Refactors'
    labels:
      - 'refactor'
      - 'improvement'
  - title: '📚 Documentation'
    labels:
      - 'doc'
      - 'docs'
      - 'documentation'
version-resolver: # Version number incrementing can be resolved automatically based on labels of individual pull requests
  major:
    labels:
      - 'major'
  minor:
    labels:
      - 'minor'
  patch:
    labels:
      - 'patch'
  default: patch
autolabeler: # You can add automatically a label into a PR, with the autolabeler option. 
  - label: 'documentation'
    branch:
      - '/docs{0,1}\/.+/'
  - label: 'fix'
    title: 
      - '/fix/i'        
      - '/bug/i'
    branch:
      - '/fix\/.+/'
  - label: 'enhancement'
    branch:
      - '/feature\/.+/'
  - label: 'refactor'
    branch:
      - '/refactor\/.+/'
include-labels: # Only pull requests that have the configured labels will be included in the release draft.
  - 'feature'
  - 'enhancement'
  - 'fix'
  - 'bugfix'
  - 'bug'
  - 'refactor'
  - 'improvement'
  - 'doc'
  - 'docs'
  - 'documentation'
  - 'minor'
  - 'major'
  - 'patch'
name-template: 'v$RESOLVED_VERSION 🐣'
tag-template: 'v$RESOLVED_VERSION'
template: |
  ## Changes

  $CHANGES
